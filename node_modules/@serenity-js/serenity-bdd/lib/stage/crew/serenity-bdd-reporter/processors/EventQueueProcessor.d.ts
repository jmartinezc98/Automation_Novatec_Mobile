import type { DomainEventQueue } from '@serenity-js/core';
import type { ActivityRelatedArtifactArchived, ActivityRelatedArtifactGenerated, BusinessRuleDetected, FeatureNarrativeDetected, SceneBackgroundDetected, SceneDescriptionDetected, SceneTagged, TestRunnerDetected } from '@serenity-js/core/lib/events';
import type { RequirementsHierarchy } from '@serenity-js/core/lib/io';
import type { SerenityBDD4ReportSchema } from '../serenity-bdd-report-schema';
import type { SerenityBDDReportContext } from './SerenityBDDReportContext';
/**
 * @package
 */
export declare abstract class EventQueueProcessor {
    protected readonly requirementsHierarchy: RequirementsHierarchy;
    constructor(requirementsHierarchy: RequirementsHierarchy);
    abstract supports(queue: DomainEventQueue): boolean;
    abstract process(queue: DomainEventQueue): SerenityBDD4ReportSchema;
    protected onFeatureNarrativeDetected<Context extends SerenityBDDReportContext>(report: Context): (event: FeatureNarrativeDetected) => Context;
    protected onSceneBackgroundDetected<Context extends SerenityBDDReportContext>(report: Context): (event: SceneBackgroundDetected) => Context;
    protected onSceneDescriptionDetected<Context extends SerenityBDDReportContext>(report: Context): (event: SceneDescriptionDetected) => Context;
    protected onTestRunnerDetected<Context extends SerenityBDDReportContext>(report: Context): (event: TestRunnerDetected) => Context;
    protected onSceneTagged<Context extends SerenityBDDReportContext>(report: Context): (event: SceneTagged) => Context;
    protected onBusinessRuleDetected<Context extends SerenityBDDReportContext>(report: Context): (event: BusinessRuleDetected) => Context;
    protected onActivityRelatedArtifactGenerated<Context extends SerenityBDDReportContext>(report: Context): (event: ActivityRelatedArtifactGenerated) => Context;
    protected onActivityRelatedArtifactArchived<Context extends SerenityBDDReportContext>(report: Context): (event: ActivityRelatedArtifactArchived) => Context;
}
//# sourceMappingURL=EventQueueProcessor.d.ts.map